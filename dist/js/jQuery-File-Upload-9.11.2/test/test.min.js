$(function(){"use strict";QUnit.done=function(){var a=$("#fileupload").prop("action");$.getJSON(a,function(b){$.each(b.files,function(b,c){$.ajax({url:a+"?file="+encodeURIComponent(c.name),type:"DELETE"})})})};var a={setup:function(){$.widget("blueimp.fileupload",window.testBasicWidget,{})},teardown:function(){$(document).unbind()}},b={setup:function(){$.widget("blueimp.fileupload",window.testUIWidget,{})},teardown:function(){$(document).unbind()}};module("Initialization",a),test("Widget initialization",function(){var a=$("#fileupload").fileupload();ok(a.data("blueimp-fileupload")||a.data("fileupload"))}),test("Data attribute options",function(){$("#fileupload").attr("data-url","http://example.org"),$("#fileupload").fileupload(),strictEqual($("#fileupload").fileupload("option","url"),"http://example.org")}),test("File input initialization",function(){var a=$("#fileupload").fileupload();ok(a.fileupload("option","fileInput").length,"File input field inside of the widget"),ok(a.fileupload("option","fileInput").length,"Widget element as file input field")}),test("Drop zone initialization",function(){ok($("#fileupload").fileupload().fileupload("option","dropZone").length)}),test("Paste zone initialization",function(){ok($("#fileupload").fileupload({pasteZone:document}).fileupload("option","pasteZone").length)}),test("Event listeners initialization",function(){expect($.support.xhrFormDataFileUpload?4:1);var a={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},b=$("#fileupload").fileupload({pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}}),c=b.fileupload("option","fileInput"),d=b.fileupload("option","dropZone"),e=b.fileupload("option","pasteZone");c.trigger($.Event("change",a)),d.trigger($.Event("dragover",a)),d.trigger($.Event("drop",a)),e.trigger($.Event("paste",a))}),module("API",a),test("destroy",function(){expect(4);var a={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},b={pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}},c=$("#fileupload").fileupload(b),d=c.fileupload("option","fileInput"),e=c.fileupload("option","dropZone"),f=c.fileupload("option","pasteZone");e.bind("dragover",b.dragover),e.bind("drop",b.drop),f.bind("paste",b.paste),d.bind("change",b.change),c.fileupload("destroy"),d.trigger($.Event("change",a)),e.trigger($.Event("dragover",a)),e.trigger($.Event("drop",a)),f.trigger($.Event("paste",a))}),test("disable/enable",function(){expect($.support.xhrFormDataFileUpload?4:1);var a={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},b=$("#fileupload").fileupload({pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}}),c=b.fileupload("option","fileInput"),d=b.fileupload("option","dropZone"),e=b.fileupload("option","pasteZone");b.fileupload("disable"),c.trigger($.Event("change",a)),d.trigger($.Event("dragover",a)),d.trigger($.Event("drop",a)),e.trigger($.Event("paste",a)),b.fileupload("enable"),c.trigger($.Event("change",a)),d.trigger($.Event("dragover",a)),d.trigger($.Event("drop",a)),e.trigger($.Event("paste",a))}),test("option",function(){expect($.support.xhrFormDataFileUpload?10:7);var a={originalEvent:{dataTransfer:{files:[{}],types:["Files"]},clipboardData:{items:[{}]}}},b=$("#fileupload").fileupload({pasteZone:document,dragover:function(){return ok(!0,"Triggers dragover callback"),!1},drop:function(){return ok(!0,"Triggers drop callback"),!1},paste:function(){return ok(!0,"Triggers paste callback"),!1},change:function(){return ok(!0,"Triggers change callback"),!1}}),c=b.fileupload("option","fileInput"),d=b.fileupload("option","dropZone"),e=b.fileupload("option","pasteZone");b.fileupload("option","fileInput",null),b.fileupload("option","dropZone",null),b.fileupload("option","pasteZone",null),c.trigger($.Event("change",a)),d.trigger($.Event("dragover",a)),d.trigger($.Event("drop",a)),e.trigger($.Event("paste",a)),b.fileupload("option","dropZone","body"),strictEqual(b.fileupload("option","dropZone")[0],document.body,"Allow a query string as parameter for the dropZone option"),b.fileupload("option","dropZone",document),strictEqual(b.fileupload("option","dropZone")[0],document,"Allow a document element as parameter for the dropZone option"),b.fileupload("option","pasteZone","body"),strictEqual(b.fileupload("option","pasteZone")[0],document.body,"Allow a query string as parameter for the pasteZone option"),b.fileupload("option","pasteZone",document),strictEqual(b.fileupload("option","pasteZone")[0],document,"Allow a document element as parameter for the pasteZone option"),b.fileupload("option","fileInput",":file"),strictEqual(b.fileupload("option","fileInput")[0],$(":file")[0],"Allow a query string as parameter for the fileInput option"),b.fileupload("option","fileInput",$(":file")[0]),strictEqual(b.fileupload("option","fileInput")[0],$(":file")[0],"Allow a document element as parameter for the fileInput option"),b.fileupload("option","fileInput",c),b.fileupload("option","dropZone",d),b.fileupload("option","pasteZone",e),c.trigger($.Event("change",a)),d.trigger($.Event("dragover",a)),d.trigger($.Event("drop",a)),e.trigger($.Event("paste",a))}),asyncTest("add",function(){expect(2);var a={files:[{name:"test"}]};$("#fileupload").fileupload({add:function(b,c){strictEqual(c.files[0].name,a.files[0].name,"Triggers add callback")}}).fileupload("add",a).fileupload("option","add",function(a,b){b.submit().complete(function(){ok(!0,"data.submit() Returns a jqXHR object"),start()})}).fileupload("add",a)}),asyncTest("send",function(){expect(3);var a={files:[{name:"test"}]};$("#fileupload").fileupload({send:function(a,b){strictEqual(b.files[0].name,"test","Triggers send callback")}}).fileupload("send",a).fail(function(){ok(!0,"Allows to abort the request")}).complete(function(){ok(!0,"Returns a jqXHR object"),start()}).abort()}),module("Callbacks",a),asyncTest("add",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({add:function(){ok(!0,"Triggers add callback"),start()}}).fileupload("add",a)}),asyncTest("submit",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({submit:function(){return ok(!0,"Triggers submit callback"),start(),!1}}).fileupload("add",a)}),asyncTest("send",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({send:function(){return ok(!0,"Triggers send callback"),start(),!1}}).fileupload("send",a)}),asyncTest("done",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({done:function(){ok(!0,"Triggers done callback"),start()}}).fileupload("send",a)}),asyncTest("fail",function(){expect(1);var a={files:[{name:"test"}]},b=$("#fileupload").fileupload({url:"404",fail:function(){ok(!0,"Triggers fail callback"),start()}});(b.data("blueimp-fileupload")||b.data("fileupload"))._isXHRUpload=function(){return!0},b.fileupload("send",a)}),asyncTest("always",function(){expect(2);var a={files:[{name:"test"}]},b=0,c=$("#fileupload").fileupload({always:function(){ok(!0,"Triggers always callback"),1===b?start():b+=1}});(c.data("blueimp-fileupload")||c.data("fileupload"))._isXHRUpload=function(){return!0},c.fileupload("add",a).fileupload("option","url","404").fileupload("add",a)}),asyncTest("progress",function(){expect(1);var a={files:[{name:"test"}]},b=0;$("#fileupload").fileupload({forceIframeTransport:!0,progress:function(){ok(!0,"Triggers progress callback"),0===b?start():b+=1}}).fileupload("send",a)}),asyncTest("progressall",function(){expect(1);var a={files:[{name:"test"}]},b=0;$("#fileupload").fileupload({forceIframeTransport:!0,progressall:function(){ok(!0,"Triggers progressall callback"),0===b?start():b+=1}}).fileupload("send",a)}),asyncTest("start",function(){expect(1);var a={files:[{name:"1"},{name:"2"}]},b=0;$("#fileupload").fileupload({send:function(){b+=1},start:function(){ok(!b,"Triggers start callback before uploads"),start()}}).fileupload("send",a)}),asyncTest("stop",function(){expect(1);var a={files:[{name:"1"},{name:"2"}]},b=0;$("#fileupload").fileupload({send:function(){b+=1},always:function(){b-=1},stop:function(){ok(!b,"Triggers stop callback after uploads"),start()}}).fileupload("send",a)}),test("change",function(){var a=$("#fileupload").fileupload(),b=a.data("blueimp-fileupload")||a.data("fileupload"),c=a.fileupload("option","fileInput");expect(2),a.fileupload({change:function(a,b){ok(!0,"Triggers change callback"),strictEqual(b.files.length,0,"Returns empty files list")},add:$.noop}),b._onChange({data:{fileupload:b},target:c[0]})}),test("paste",function(){var a=$("#fileupload").fileupload(),b=a.data("blueimp-fileupload")||a.data("fileupload");expect(1),a.fileupload({paste:function(){ok(!0,"Triggers paste callback")},add:$.noop}),b._onPaste({data:{fileupload:b},originalEvent:{dataTransfer:{files:[{}]},clipboardData:{items:[{}]}},preventDefault:$.noop})}),test("drop",function(){var a=$("#fileupload").fileupload(),b=a.data("blueimp-fileupload")||a.data("fileupload");expect(1),a.fileupload({drop:function(){ok(!0,"Triggers drop callback")},add:$.noop}),b._onDrop({data:{fileupload:b},originalEvent:{dataTransfer:{files:[{}]},clipboardData:{items:[{}]}},preventDefault:$.noop})}),test("dragover",function(){var a=$("#fileupload").fileupload(),b=a.data("blueimp-fileupload")||a.data("fileupload");expect(1),a.fileupload({dragover:function(){ok(!0,"Triggers dragover callback")},add:$.noop}),b._onDragOver({data:{fileupload:b},originalEvent:{dataTransfer:{types:["Files"]}},preventDefault:$.noop})}),module("Options",a),test("paramName",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({paramName:null,send:function(a,b){return strictEqual(b.paramName[0],b.fileInput.prop("name"),"Takes paramName from file input field if not set"),!1}}).fileupload("send",a)}),test("url",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({url:null,send:function(a,b){return strictEqual(b.url,$(b.fileInput.prop("form")).prop("action"),"Takes url from form action if not set"),!1}}).fileupload("send",a)}),test("type",function(){expect(2);var a={files:[{name:"test"}]};$("#fileupload").fileupload({type:null,send:function(a,b){return strictEqual(b.type,"POST",'Request type is "POST" if not set to "PUT"'),!1}}).fileupload("send",a),$("#fileupload").fileupload({type:"PUT",send:function(a,b){return strictEqual(b.type,"PUT",'Request type is "PUT" if set to "PUT"'),!1}}).fileupload("send",a)}),test("replaceFileInput",function(){var a=$("#fileupload").fileupload(),b=a.data("blueimp-fileupload")||a.data("fileupload"),c=a.fileupload("option","fileInput"),d=c[0];expect(2),a.fileupload({replaceFileInput:!1,change:function(){strictEqual(a.fileupload("option","fileInput")[0],d,"Keeps file input with replaceFileInput: false")},add:$.noop}),b._onChange({data:{fileupload:b},target:c[0]}),a.fileupload({replaceFileInput:!0,change:function(){notStrictEqual(a.fileupload("option","fileInput")[0],d,"Replaces file input with replaceFileInput: true")},add:$.noop}),b._onChange({data:{fileupload:b},target:c[0]})}),asyncTest("forceIframeTransport",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({forceIframeTransport:!0,done:function(a,b){strictEqual(b.dataType.substr(0,6),"iframe","Iframe Transport is used"),start()}}).fileupload("send",a)}),test("singleFileUploads",function(){expect(3);var a=$("#fileupload").fileupload(),b={files:[{name:"1"},{name:"2"}]},c=1;(a.data("blueimp-fileupload")||a.data("fileupload"))._isXHRUpload=function(){return!0},$("#fileupload").fileupload({singleFileUploads:!0,add:function(){ok(!0,"Triggers callback number "+c.toString()),c+=1}}).fileupload("add",b).fileupload("option","singleFileUploads",!1).fileupload("add",b)}),test("limitMultiFileUploads",function(){expect(3);var a=$("#fileupload").fileupload(),b={files:[{name:"1"},{name:"2"},{name:"3"},{name:"4"},{name:"5"}]},c=1;(a.data("blueimp-fileupload")||a.data("fileupload"))._isXHRUpload=function(){return!0},$("#fileupload").fileupload({singleFileUploads:!1,limitMultiFileUploads:2,add:function(){ok(!0,"Triggers callback number "+c.toString()),c+=1}}).fileupload("add",b)}),test("limitMultiFileUploadSize",function(){expect(7);var a=$("#fileupload").fileupload(),b={files:[{name:"1-1",size:1e5},{name:"1-2",size:4e4},{name:"2-1",size:1e5},{name:"3-1",size:5e4},{name:"3-2",size:4e4},{name:"4-1",size:45e3}]},c={files:[{name:"5-1"},{name:"5-2"},{name:"6-1"},{name:"6-2"},{name:"7-1"}]},d=1;(a.data("blueimp-fileupload")||a.data("fileupload"))._isXHRUpload=function(){return!0},$("#fileupload").fileupload({singleFileUploads:!1,limitMultiFileUploads:2,limitMultiFileUploadSize:15e4,limitMultiFileUploadSizeOverhead:5e3,add:function(){ok(!0,"Triggers callback number "+d.toString()),d+=1}}).fileupload("add",b).fileupload("add",c)}),asyncTest("sequentialUploads",function(){expect(6);var a={files:[{name:"1"},{name:"2"},{name:"3"},{name:"4"},{name:"5"},{name:"6"}]},b=0,c=0,d=0,e=$("#fileupload").fileupload({sequentialUploads:!0,add:function(a,c){b+=1,4===b?c.submit().abort():c.submit()},send:function(){c+=1},done:function(){d+=1,strictEqual(c,d,"upload in order")},fail:function(a,b){strictEqual(b.errorThrown,"abort","upload aborted")},stop:function(){start()}});(e.data("blueimp-fileupload")||e.data("fileupload"))._isXHRUpload=function(){return!0},e.fileupload("add",a)}),asyncTest("limitConcurrentUploads",function(){expect(12);var a={files:[{name:"1"},{name:"2"},{name:"3"},{name:"4"},{name:"5"},{name:"6"},{name:"7"},{name:"8"},{name:"9"},{name:"10"},{name:"11"},{name:"12"}]},b=0,c=0,d=0,e=$("#fileupload").fileupload({limitConcurrentUploads:3,add:function(a,c){b+=1,4===b?c.submit().abort():c.submit()},send:function(){c+=1},done:function(){d+=1,ok(3>c-d)},fail:function(a,b){strictEqual(b.errorThrown,"abort","upload aborted")},stop:function(){start()}});(e.data("blueimp-fileupload")||e.data("fileupload"))._isXHRUpload=function(){return!0},e.fileupload("add",a)}),$.support.xhrFileUpload&&asyncTest("multipart",function(){expect(2);var a={files:[{name:"test.png",size:123,type:"image/png"}]},b=$("#fileupload").fileupload({multipart:!1,always:function(b,c){strictEqual(c.contentType,a.files[0].type,"non-multipart upload sets file type as contentType"),strictEqual(c.headers["Content-Disposition"],'attachment; filename="'+a.files[0].name+'"',"non-multipart upload sets Content-Disposition header"),start()}});b.fileupload("send",a)}),module("UI Initialization",b),test("Widget initialization",function(){var a=$("#fileupload").fileupload();ok(a.data("blueimp-fileupload")||a.data("fileupload")),ok($("#fileupload").fileupload("option","uploadTemplate").length,"Initialized upload template"),ok($("#fileupload").fileupload("option","downloadTemplate").length,"Initialized download template")}),test("Buttonbar event listeners",function(){var a=$("#fileupload .fileupload-buttonbar"),b=[{name:"test"}];expect(4),$("#fileupload").fileupload({send:function(){ok(!0,"Started file upload via global start button")},fail:function(a,b){ok(!0,"Canceled file upload via global cancel button"),b.context.remove()},destroy:function(){ok(!0,"Delete action called via global delete button")}}),$("#fileupload").fileupload("add",{files:b}),a.find(".cancel").click(),$("#fileupload").fileupload("add",{files:b}),a.find(".start").click(),a.find(".cancel").click(),b[0].deleteUrl="http://example.org/banana.jpg",($("#fileupload").data("blueimp-fileupload")||$("#fileupload").data("fileupload"))._renderDownload(b).appendTo($("#fileupload .files")).show().find(".toggle").click(),a.find(".delete").click()}),module("UI API",b),test("destroy",function(){var a=$("#fileupload .fileupload-buttonbar"),b=[{name:"test"}];expect(1),$("#fileupload").fileupload({send:function(){return ok(!0,"This test should not run"),!1}}).fileupload("add",{files:b}).fileupload("destroy"),a.find(".start").click(function(){return ok(!0,"Clicked global start button"),!1}).click()}),test("disable/enable",function(){var a=$("#fileupload .fileupload-buttonbar");$("#fileupload").fileupload(),$("#fileupload").fileupload("disable"),strictEqual(a.find("input[type=file], button").not(":disabled").length,0,"Disables the buttonbar buttons"),$("#fileupload").fileupload("enable"),strictEqual(a.find("input[type=file], button").not(":disabled").length,4,"Enables the buttonbar buttons")}),module("UI Callbacks",b),test("destroy",function(){expect(3),$("#fileupload").fileupload({destroy:function(a,b){ok(!0,"Triggers destroy callback"),strictEqual(b.url,"test","Passes over deletion url parameter"),strictEqual(b.type,"DELETE","Passes over deletion request type parameter")}}),($("#fileupload").data("blueimp-fileupload")||$("#fileupload").data("fileupload"))._renderDownload([{name:"test",deleteUrl:"test",deleteType:"DELETE"}]).appendTo($("#fileupload .files")).show().find(".toggle").click(),$("#fileupload .fileupload-buttonbar .delete").click()}),asyncTest("added",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({added:function(b,c){start(),strictEqual(c.files[0].name,a.files[0].name,"Triggers added callback")},send:function(){return!1}}).fileupload("add",a)}),asyncTest("started",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({started:function(){return start(),ok("Triggers started callback"),!1},sent:function(){return!1}}).fileupload("send",a)}),asyncTest("sent",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({sent:function(b,c){return start(),strictEqual(c.files[0].name,a.files[0].name,"Triggers sent callback"),!1}}).fileupload("send",a)}),asyncTest("completed",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({completed:function(){return start(),ok("Triggers completed callback"),!1}}).fileupload("send",a)}),asyncTest("failed",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({failed:function(){return start(),ok("Triggers failed callback"),!1}}).fileupload("send",a).abort()}),asyncTest("stopped",function(){expect(1);var a={files:[{name:"test"}]};$("#fileupload").fileupload({stopped:function(){return start(),ok("Triggers stopped callback"),!1}}).fileupload("send",a)}),asyncTest("destroyed",function(){expect(1),$("#fileupload").fileupload({dataType:"html",destroyed:function(){start(),ok(!0,"Triggers destroyed callback")}}),($("#fileupload").data("blueimp-fileupload")||$("#fileupload").data("fileupload"))._renderDownload([{name:"test",deleteUrl:".",deleteType:"GET"}]).appendTo($("#fileupload .files")).show().find(".toggle").click(),$("#fileupload .fileupload-buttonbar .delete").click()}),module("UI Options",b),test("autoUpload",function(){expect(1),$("#fileupload").fileupload({autoUpload:!0,send:function(){return ok(!0,"Started file upload automatically"),!1}}).fileupload("add",{files:[{name:"test"}]}).fileupload("option","autoUpload",!1).fileupload("add",{files:[{name:"test"}]})}),test("maxNumberOfFiles",function(){expect(3);var a=0,b=0;$("#fileupload").fileupload({autoUpload:!0,maxNumberOfFiles:3,singleFileUploads:!1,send:function(){strictEqual(b+=1,a)},progress:$.noop,progressall:$.noop,done:$.noop,stop:$.noop}).fileupload("add",{files:[{name:a+=1}]}).fileupload("add",{files:[{name:a+=1}]}).fileupload("add",{files:[{name:a+=1}]}).fileupload("add",{files:[{name:"test"}]})}),test("maxFileSize",function(){expect(2);var a=0,b=0;$("#fileupload").fileupload({autoUpload:!0,maxFileSize:1e3,send:function(){return strictEqual(b+=1,a),!1}}).fileupload("add",{files:[{name:a+=1}]}).fileupload("add",{files:[{name:a+=1,size:999}]}).fileupload("add",{files:[{name:"test",size:1001}]}).fileupload({send:function(a,b){return ok(!$.blueimp.fileupload.prototype.options.send.call(this,a,b)),!1}})}),test("minFileSize",function(){expect(2);var a=0,b=0;$("#fileupload").fileupload({autoUpload:!0,minFileSize:1e3,send:function(){return strictEqual(b+=1,a),!1}}).fileupload("add",{files:[{name:a+=1}]}).fileupload("add",{files:[{name:a+=1,size:1001}]}).fileupload("add",{files:[{name:"test",size:999}]}).fileupload({send:function(a,b){return ok(!$.blueimp.fileupload.prototype.options.send.call(this,a,b)),!1}})}),test("acceptFileTypes",function(){expect(2);var a=0,b=0;$("#fileupload").fileupload({autoUpload:!0,acceptFileTypes:/(\.|\/)(gif|jpe?g|png)$/i,disableImageMetaDataLoad:!0,send:function(){return strictEqual(b+=1,a),!1}}).fileupload("add",{files:[{name:(a+=1)+".jpg"}]}).fileupload("add",{files:[{name:a+=1,type:"image/jpeg"}]}).fileupload("add",{files:[{name:"test.txt",type:"text/plain"}]}).fileupload({send:function(a,b){return ok(!$.blueimp.fileupload.prototype.options.send.call(this,a,b)),!1}})}),test("acceptFileTypes as HTML5 data attribute",function(){expect(2);var a=/(\.|\/)(gif|jpe?g|png)$/i;$("#fileupload").attr("data-accept-file-types",a.toString()).fileupload(),strictEqual($.type($("#fileupload").fileupload("option","acceptFileTypes")),$.type(a)),strictEqual($("#fileupload").fileupload("option","acceptFileTypes").toString(),a.toString())})});